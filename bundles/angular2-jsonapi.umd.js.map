{"version":3,"file":"angular2-jsonapi.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular2-jsonapi/models/json-nested.model.ts","ng://angular2-jsonapi/converters/json-model/json-model.converter.ts","ng://angular2-jsonapi/decorators/has-many.decorator.ts","ng://angular2-jsonapi/decorators/belongs-to.decorator.ts","ng://angular2-jsonapi/constants/symbols.ts","ng://angular2-jsonapi/converters/date/date.converter.ts","ng://angular2-jsonapi/decorators/attribute.decorator.ts","ng://angular2-jsonapi/decorators/nested-attribute.decorator.ts","ng://angular2-jsonapi/decorators/json-attribute.decorator.ts","ng://angular2-jsonapi/models/json-api-meta.model.ts","ng://angular2-jsonapi/decorators/json-api-model-config.decorator.ts","ng://angular2-jsonapi/decorators/json-api-datastore-config.decorator.ts","ng://angular2-jsonapi/models/json-api.model.ts","ng://angular2-jsonapi/models/error-response.model.ts","ng://angular2-jsonapi/models/json-api-query-data.ts","ng://angular2-jsonapi/interfaces/overrides.interface.ts","ng://angular2-jsonapi/interfaces/json-model-converter-config.interface.ts","ng://angular2-jsonapi/interfaces/datastore-config.interface.ts","ng://angular2-jsonapi/interfaces/model-config.interface.ts","ng://angular2-jsonapi/interfaces/attribute-decorator-options.interface.ts","ng://angular2-jsonapi/interfaces/property-converter.interface.ts","ng://angular2-jsonapi/services/json-api-datastore.service.ts","ng://angular2-jsonapi/providers.ts","ng://angular2-jsonapi/module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ModelConfig } from '../interfaces/model-config.interface';\nimport { JsonApiModel } from './json-api.model';\n\nexport class JsonApiNestedModel {\n  [key: string]: any;\n\n  public nestedDataSerialization = false;\n\n  constructor(data?: any) {\n    if (data) {\n      Object.assign(this, data);\n    }\n  }\n\n  get modelConfig(): ModelConfig {\n    return Reflect.getMetadata('JsonApiModelConfig', this.constructor);\n  }\n\n  public fill(data: any) {\n    Object.assign(this, data);\n  }\n\n  public serialize(): any {\n    return this.transformSerializedNamesToPropertyNames();\n  }\n\n  protected transformSerializedNamesToPropertyNames<T extends JsonApiModel>() {\n    const serializedNameToPropertyName = this.getModelPropertyNames();\n    const properties: any = {};\n    Object.keys(serializedNameToPropertyName).forEach((serializedName) => {\n      if (this && this[serializedName] !== null &&\n        this[serializedName] !== undefined && serializedName !== 'nestedDataSerialization') {\n        properties[serializedNameToPropertyName[serializedName]] = this[serializedName];\n      }\n    });\n\n    return properties;\n  }\n\n  protected getModelPropertyNames() {\n    return Reflect.getMetadata('AttributeMapping', this) || [];\n  }\n}\n","import { JsonModelConverterConfig } from '../../interfaces/json-model-converter-config.interface';\nimport { PropertyConverter } from '../../interfaces/property-converter.interface';\nimport { JsonApiNestedModel } from '../../models/json-nested.model';\n\nexport const DEFAULT_OPTIONS: JsonModelConverterConfig = {\n  nullValue: false,\n  hasMany: false\n};\n\nexport class JsonModelConverter<T> implements PropertyConverter {\n  private modelType: any; // ModelType<T>\n  private options: JsonModelConverterConfig;\n\n  constructor(model: T, options: JsonModelConverterConfig = {}) {\n    this.modelType = model; // <ModelType<T>>model\n    this.options = {...DEFAULT_OPTIONS, ...options};\n  }\n\n  mask(value: any): T | Array<T> {\n    if (!value && !this.options.nullValue) {\n      if (this.options.hasMany) {\n        return [];\n      }\n      return new this.modelType();\n    }\n\n    let result = null;\n    if (this.options.hasMany) {\n      if (!Array.isArray(value)) {\n        throw new Error(`ERROR: JsonModelConverter: Expected array but got ${typeof value}.`);\n      }\n      result = [];\n      for (const item of value) {\n        if (item === null) {\n          continue;\n        }\n        let temp;\n        if (typeof item === 'object') {\n          temp = new this.modelType();\n          temp.fill(item);\n        } else {\n          temp = item;\n        }\n\n        result.push(temp);\n      }\n    } else {\n      if (!(value instanceof this.modelType)) {\n        result = new this.modelType();\n        result.fill(value);\n      } else {\n        result = value;\n      }\n    }\n    return result;\n  }\n\n  unmask(value: any): any {\n    if (!value) {\n      return value;\n    }\n    let result = null;\n    if (Array.isArray(value)) {\n      result = [];\n      for (const item of value) {\n        if (!item) {\n          continue;\n        }\n        if (item instanceof JsonApiNestedModel) {\n          item.nestedDataSerialization = true;\n          result.push(item.serialize());\n          item.nestedDataSerialization = false;\n        } else {\n          result.push(item);\n        }\n      }\n    } else {\n      if (value instanceof JsonApiNestedModel) {\n        value.nestedDataSerialization = true;\n        result = value.serialize();\n        value.nestedDataSerialization = false;\n      } else {\n        result = value;\n      }\n    }\n    return result;\n  }\n}\n","export function HasMany(config: any = {}) {\n  return (target: any, propertyName: string | symbol) => {\n    const annotations = Reflect.getMetadata('HasMany', target) || [];\n\n    annotations.push({\n      propertyName,\n      relationship: config.key || propertyName\n    });\n\n    Reflect.defineMetadata('HasMany', annotations, target);\n  };\n}\n","export function BelongsTo(config: any = {}) {\n  return (target: any, propertyName: string | symbol) => {\n    const annotations = Reflect.getMetadata('BelongsTo', target) || [];\n\n    annotations.push({\n      propertyName,\n      relationship: config.key || propertyName\n    });\n\n    Reflect.defineMetadata('BelongsTo', annotations, target);\n  };\n}\n","// tslint:disable-next-line:variable-name\nexport const AttributeMetadata = Symbol('AttributeMetadata') as any;\n","import { parseISO } from 'date-fns';\nimport { PropertyConverter } from '../../interfaces/property-converter.interface';\n\nexport class DateConverter implements PropertyConverter {\n  mask(value: any) {\n    if (typeof value === 'string') {\n      return parseISO(value);\n    } else {\n      return value;\n    }\n  }\n\n  unmask(value: any) {\n    return value.toISOString();\n  }\n}\n","import { AttributeMetadata } from '../constants/symbols';\nimport { AttributeDecoratorOptions } from '../interfaces/attribute-decorator-options.interface';\nimport { DateConverter } from '../converters/date/date.converter';\nimport * as _ from 'lodash';\n\nexport function Attribute(options: AttributeDecoratorOptions = {}): PropertyDecorator {\n  return (target: any, propertyName: string) => {\n    const converter = (dataType: any, value: any, forSerialisation = false): any => {\n      let attrConverter;\n\n      if (options.converter) {\n        attrConverter = options.converter;\n      } else if (dataType === Date) {\n        attrConverter = new DateConverter();\n      } else {\n        const datatype = new dataType();\n\n        if (datatype.mask && datatype.unmask) {\n          attrConverter = datatype;\n        }\n      }\n\n      if (attrConverter) {\n        if (!forSerialisation) {\n          return attrConverter.mask(value);\n        }\n        return attrConverter.unmask(value);\n      }\n\n      return value;\n    };\n\n    const saveAnnotations = () => {\n      const metadata = Reflect.getMetadata('Attribute', target) || {};\n\n      metadata[propertyName] = {\n        marked: true\n      };\n\n      Reflect.defineMetadata('Attribute', metadata, target);\n\n      const mappingMetadata = Reflect.getMetadata('AttributeMapping', target) || {};\n      const serializedPropertyName = options.serializedName !== undefined ? options.serializedName : propertyName;\n      mappingMetadata[serializedPropertyName] = propertyName;\n      Reflect.defineMetadata('AttributeMapping', mappingMetadata, target);\n    };\n\n    const setMetadata = (\n      instance: any,\n      oldValue: any,\n      newValue: any\n    ) => {\n      const targetType = Reflect.getMetadata('design:type', target, propertyName);\n\n      if (!instance[AttributeMetadata]) {\n        instance[AttributeMetadata] = {};\n      }\n      instance[AttributeMetadata][propertyName] = {\n        newValue,\n        oldValue,\n        nested: false,\n        serializedName: options.serializedName,\n        hasDirtyAttributes: !_.isEqual(oldValue, newValue),\n        serialisationValue: converter(targetType, newValue, true)\n      };\n    };\n\n    const getter = function() {\n      return this[`_${propertyName}`];\n    };\n\n    const setter = function(newVal: any) {\n      const targetType = Reflect.getMetadata('design:type', target, propertyName);\n      const convertedValue = converter(targetType, newVal);\n      let oldValue = null;\n      if (this.isModelInitialization() && this.id) {\n        oldValue = converter(targetType, newVal);\n      } else {\n        if (this[AttributeMetadata] && this[AttributeMetadata][propertyName]) {\n          oldValue = this[AttributeMetadata][propertyName].oldValue;\n        }\n      }\n\n      this[`_${propertyName}`] = convertedValue;\n      setMetadata(this, oldValue, convertedValue);\n    };\n\n    if (delete target[propertyName]) {\n      saveAnnotations();\n      Object.defineProperty(target, propertyName, {\n        get: getter,\n        set: setter,\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n}\n","import { AttributeMetadata } from '../constants/symbols';\nimport { AttributeDecoratorOptions } from '../interfaces/attribute-decorator-options.interface';\nimport * as _ from 'lodash';\n\nexport function NestedAttribute(options: AttributeDecoratorOptions = {}): PropertyDecorator {\n  return (target: any, propertyName: string) => {\n    const converter = (dataType: any, value: any, forSerialisation = false): any => {\n      let attrConverter;\n\n      if (options.converter) {\n        attrConverter = options.converter;\n      } else {\n        const datatype = new dataType();\n\n        if (datatype.mask && datatype.unmask) {\n          attrConverter = datatype;\n        }\n      }\n\n      if (attrConverter) {\n        if (!forSerialisation) {\n          return attrConverter.mask(value);\n        }\n        return attrConverter.unmask(value);\n      }\n\n      return value;\n    };\n\n    const saveAnnotations = () => {\n      const metadata = Reflect.getMetadata('NestedAttribute', target) || {};\n\n      metadata[propertyName] = {\n        marked: true\n      };\n\n      Reflect.defineMetadata('NestedAttribute', metadata, target);\n\n      const mappingMetadata = Reflect.getMetadata('AttributeMapping', target) || {};\n      const serializedPropertyName = options.serializedName !== undefined ? options.serializedName : propertyName;\n      mappingMetadata[serializedPropertyName] = propertyName;\n      Reflect.defineMetadata('AttributeMapping', mappingMetadata, target);\n    };\n\n    const updateMetadata = (instance: any) => {\n      const newValue = instance[`_${propertyName}`];\n\n      if (!instance[AttributeMetadata]) {\n        instance[AttributeMetadata] = {};\n      }\n      if (instance[AttributeMetadata][propertyName] && !instance.isModelInitialization()) {\n        instance[AttributeMetadata][propertyName].newValue = newValue;\n        instance[AttributeMetadata][propertyName].hasDirtyAttributes = !_.isEqual(\n          instance[AttributeMetadata][propertyName].oldValue,\n          newValue\n        );\n        instance[AttributeMetadata][propertyName].serialisationValue = newValue;\n      } else {\n        const oldValue = _.cloneDeep(newValue);\n        instance[AttributeMetadata][propertyName] = {\n          newValue,\n          oldValue,\n          converter,\n          nested: true,\n          hasDirtyAttributes: !_.isEqual(newValue, oldValue)\n        };\n      }\n    };\n\n    const getter = function() {\n      return this[`_${propertyName}`];\n    };\n\n    const setter = function(newVal: any) {\n      const targetType = Reflect.getMetadata('design:type', target, propertyName);\n      this[`_${propertyName}`] = converter(targetType, newVal);\n      updateMetadata(this);\n    };\n\n    if (delete target[propertyName]) {\n      saveAnnotations();\n      Object.defineProperty(target, propertyName, {\n        get: getter,\n        set: setter,\n        enumerable: true,\n        configurable: true\n      });\n\n    }\n  };\n}\n","import { AttributeDecoratorOptions } from '../interfaces/attribute-decorator-options.interface';\nimport { DateConverter } from '../converters/date/date.converter';\n\nexport function JsonAttribute(options: AttributeDecoratorOptions = {}): PropertyDecorator {\n  return (target: any, propertyName: string) => {\n    const converter = (dataType: any, value: any, forSerialisation = false): any => {\n      let attrConverter;\n\n      if (options.converter) {\n        attrConverter = options.converter;\n      } else if (dataType === Date) {\n        attrConverter = new DateConverter();\n      } else {\n        const datatype = new dataType();\n\n        if (datatype.mask && datatype.unmask) {\n          attrConverter = datatype;\n        }\n      }\n\n      if (attrConverter) {\n        if (!forSerialisation) {\n          return attrConverter.mask(value);\n        }\n        return attrConverter.unmask(value);\n      }\n\n      return value;\n    };\n\n    const saveAnnotations = () => {\n      const metadata = Reflect.getMetadata('JsonAttribute', target) || {};\n\n      metadata[propertyName] = {\n        marked: true\n      };\n\n      Reflect.defineMetadata('JsonAttribute', metadata, target);\n\n      const mappingMetadata = Reflect.getMetadata('AttributeMapping', target) || {};\n      const serializedPropertyName = options.serializedName !== undefined ? options.serializedName : propertyName;\n      mappingMetadata[serializedPropertyName] = propertyName;\n      Reflect.defineMetadata('AttributeMapping', mappingMetadata, target);\n    };\n\n    const getter = function() {\n      if (this.nestedDataSerialization) {\n        return converter(Reflect.getMetadata('design:type', target, propertyName), this[`_${propertyName}`], true);\n      }\n      return this[`_${propertyName}`];\n    };\n\n    const setter = function(newVal: any) {\n      const targetType = Reflect.getMetadata('design:type', target, propertyName);\n      this[`_${propertyName}`] = converter(targetType, newVal);\n    };\n\n    if (delete target[propertyName]) {\n      saveAnnotations();\n      Object.defineProperty(target, propertyName, {\n        get: getter,\n        set: setter,\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n}\n","export type MetaModelType<T> = new(response: any) => T;\n\nexport class JsonApiMetaModel {\n  public links: Array<any>;\n  public meta: any;\n\n  constructor(response: any) {\n    this.links = response.links || [];\n    this.meta = response.meta;\n  }\n}\n","import { JsonApiMetaModel } from '../models/json-api-meta.model';\nimport { ModelConfig } from '../interfaces/model-config.interface';\n\nexport function JsonApiModelConfig(config: ModelConfig) {\n  return (target: any) => {\n    if (typeof config.meta === 'undefined' || config.meta == null) {\n      config.meta = JsonApiMetaModel;\n    }\n\n    Reflect.defineMetadata('JsonApiModelConfig', config, target);\n  };\n}\n","export function JsonApiDatastoreConfig(config: any = {}) {\n  return (target: any) => {\n    Reflect.defineMetadata('JsonApiDatastoreConfig', config, target);\n  };\n}\n","import find from 'lodash-es/find';\nimport includes from 'lodash-es/includes';\nimport { Observable } from 'rxjs';\nimport { JsonApiDatastore, ModelType } from '../services/json-api-datastore.service';\nimport { ModelConfig } from '../interfaces/model-config.interface';\nimport * as _ from 'lodash';\nimport { AttributeMetadata } from '../constants/symbols';\nimport { HttpHeaders } from '@angular/common/http';\n\n/**\n * HACK/FIXME:\n * Type 'symbol' cannot be used as an index type.\n * TypeScript 2.9.x\n * See https://github.com/Microsoft/TypeScript/issues/24587.\n */\n// tslint:disable-next-line:variable-name\nconst AttributeMetadataIndex: string = AttributeMetadata as any;\n\nconst parseRelationshipLinks = relationships => {\n  const result = {};\n  const linksMapper = ({ links }, key) => {\n    if (links) {\n      result[key] = { links };\n    }\n  };\n\n  _.forEach(relationships || {}, linksMapper);\n\n  return result;\n};\n\nexport class JsonApiModel {\n  id: string;\n  public modelInitialization = false;\n  public relationshipLinks = {};\n\n  [key: string]: any;\n\n  lastSyncModels: Array<any>;\n\n  constructor(private internalDatastore: JsonApiDatastore, data?: any) {\n    if (data) {\n      this.modelInitialization = true;\n      this.id = data.id;\n      this.relationshipLinks = parseRelationshipLinks(data.relationships);\n      Object.assign(this, data.attributes);\n      this.modelInitialization = false;\n    }\n  }\n\n  public isModelInitialization(): boolean {\n    return this.modelInitialization;\n  }\n\n  public syncRelationships(data: any, included: any, remainingModels?: Array<any>): void {\n    if (this.lastSyncModels === included) {\n      return;\n    }\n\n    if (data) {\n      let modelsForProcessing = remainingModels;\n\n      if (modelsForProcessing === undefined) {\n        modelsForProcessing = [].concat(included);\n      }\n\n      this.parseHasMany(data, included, modelsForProcessing);\n      this.parseBelongsTo(data, included, modelsForProcessing);\n    }\n\n    this.lastSyncModels = included;\n  }\n\n  public save(params?: any, headers?: HttpHeaders, customUrl?: string): Observable<this> {\n    this.checkChanges();\n    const attributesMetadata: any = this[AttributeMetadataIndex];\n    return this.internalDatastore.saveRecord(attributesMetadata, this, params, headers, customUrl);\n  }\n\n  get hasDirtyAttributes() {\n    this.checkChanges();\n    const attributesMetadata: any = this[AttributeMetadataIndex];\n    let hasDirtyAttributes = false;\n    for (const propertyName in attributesMetadata) {\n      if (attributesMetadata.hasOwnProperty(propertyName)) {\n        const metadata: any = attributesMetadata[propertyName];\n        if (metadata.hasDirtyAttributes) {\n          hasDirtyAttributes = true;\n          break;\n        }\n      }\n    }\n    return hasDirtyAttributes;\n  }\n\n  private checkChanges() {\n    const attributesMetadata: any = this[AttributeMetadata];\n    for (const propertyName in attributesMetadata) {\n      if (attributesMetadata.hasOwnProperty(propertyName)) {\n        const metadata: any = attributesMetadata[propertyName];\n        if (metadata.nested) {\n          this[AttributeMetadata][propertyName].hasDirtyAttributes = !_.isEqual(\n            attributesMetadata[propertyName].oldValue,\n            attributesMetadata[propertyName].newValue\n          );\n          this[AttributeMetadata][propertyName].serialisationValue = attributesMetadata[propertyName].converter(\n            Reflect.getMetadata('design:type', this, propertyName),\n            _.cloneDeep(attributesMetadata[propertyName].newValue),\n            true\n          );\n        }\n      }\n    }\n  }\n\n  public rollbackAttributes(): void {\n    const attributesMetadata: any = this[AttributeMetadataIndex];\n    for (const propertyName in attributesMetadata) {\n      if (attributesMetadata.hasOwnProperty(propertyName)) {\n        if (attributesMetadata[propertyName].hasDirtyAttributes) {\n          this[propertyName] = _.cloneDeep(attributesMetadata[propertyName].oldValue);\n        }\n      }\n    }\n  }\n\n  get modelConfig(): ModelConfig {\n    return Reflect.getMetadata('JsonApiModelConfig', this.constructor);\n  }\n\n  private parseHasMany(data: any, included: any, remainingModels: Array<any>): void {\n    const hasMany: any = Reflect.getMetadata('HasMany', this);\n\n    if (hasMany) {\n      for (const metadata of hasMany) {\n        const relationship: any = data.relationships ? data.relationships[metadata.relationship] : null;\n\n        if (relationship && relationship.data && Array.isArray(relationship.data)) {\n          let allModels: JsonApiModel[] = [];\n          const modelTypesFetched: any = [];\n\n          for (const typeIndex of Object.keys(relationship.data)) {\n            const typeName: string = relationship.data[typeIndex].type;\n\n            if (!includes(modelTypesFetched, typeName)) {\n              modelTypesFetched.push(typeName);\n              // tslint:disable-next-line:max-line-length\n              const modelType: ModelType<this> = Reflect.getMetadata('JsonApiDatastoreConfig', this.internalDatastore.constructor).models[typeName];\n\n              if (modelType) {\n                const relationshipModels: JsonApiModel[] = this.getHasManyRelationship(\n                  modelType,\n                  relationship.data,\n                  included,\n                  typeName,\n                  remainingModels\n                );\n\n                if (relationshipModels.length > 0) {\n                  allModels = allModels.concat(relationshipModels);\n                }\n              } else {\n                throw {message: `parseHasMany - Model type for relationship ${typeName} not found.`};\n              }\n            }\n          }\n\n          this[metadata.propertyName] = allModels;\n        }\n      }\n    }\n  }\n\n  private parseBelongsTo(data: any, included: Array<any>, remainingModels: Array<any>): void {\n    const belongsTo: any = Reflect.getMetadata('BelongsTo', this);\n\n    if (belongsTo) {\n      for (const metadata of belongsTo) {\n        const relationship: any = data.relationships ? data.relationships[metadata.relationship] : null;\n        if (relationship && relationship.data) {\n          const dataRelationship: any = (relationship.data instanceof Array) ? relationship.data[0] : relationship.data;\n          if (dataRelationship) {\n            const typeName: string = dataRelationship.type;\n            // tslint:disable-next-line:max-line-length\n            const modelType: ModelType<this> = Reflect.getMetadata('JsonApiDatastoreConfig', this.internalDatastore.constructor).models[typeName];\n\n            if (modelType) {\n              const relationshipModel = this.getBelongsToRelationship(\n                modelType,\n                dataRelationship,\n                included,\n                typeName,\n                remainingModels\n              );\n\n              if (relationshipModel) {\n                this[metadata.propertyName] = relationshipModel;\n              }\n            } else {\n              throw {message: `parseBelongsTo - Model type for relationship ${typeName} not found.`};\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private getHasManyRelationship<T extends JsonApiModel>(\n    modelType: ModelType<T>,\n    data: any,\n    included: any,\n    typeName: string,\n    remainingModels: Array<any>\n  ): Array<T> {\n    const relationshipList: Array<T> = [];\n\n    data.forEach((item: any) => {\n      const relationshipData: any = find(included, {id: item.id, type: typeName} as any);\n\n      if (relationshipData) {\n        const newObject: T = this.createOrPeek(modelType, relationshipData);\n\n        const indexOfNewlyFoundModel = remainingModels.indexOf(relationshipData);\n        const modelsForProcessing = remainingModels.concat([]);\n\n        if (indexOfNewlyFoundModel !== -1) {\n          modelsForProcessing.splice(indexOfNewlyFoundModel, 1);\n          newObject.syncRelationships(relationshipData, included, modelsForProcessing);\n        }\n\n        relationshipList.push(newObject);\n      }\n    });\n\n    return relationshipList;\n  }\n\n  private getBelongsToRelationship<T extends JsonApiModel>(\n    modelType: ModelType<T>,\n    data: any,\n    included: Array<any>,\n    typeName: string,\n    remainingModels: Array<any>\n  ): T | null {\n    const id: string = data.id;\n\n    const relationshipData: any = find(included, {id, type: typeName} as any);\n\n    if (relationshipData) {\n      const newObject: T = this.createOrPeek(modelType, relationshipData);\n\n      const indexOfNewlyFoundModel = remainingModels.indexOf(relationshipData);\n      const modelsForProcessing = remainingModels.concat([]);\n\n      if (indexOfNewlyFoundModel !== -1) {\n        modelsForProcessing.splice(indexOfNewlyFoundModel, 1);\n        newObject.syncRelationships(relationshipData, included, modelsForProcessing);\n      }\n\n      return newObject;\n    }\n\n    return this.internalDatastore.peekRecord(modelType, id);\n  }\n\n  private createOrPeek<T extends JsonApiModel>(modelType: ModelType<T>, data: any): T {\n    const peek = this.internalDatastore.peekRecord(modelType, data.id);\n\n    if (peek) {\n      _.extend(peek, this.internalDatastore.transformSerializedNamesToPropertyNames(modelType, data.attributes));\n      return peek;\n    }\n\n    const newObject: T = this.internalDatastore.deserializeModel(modelType, data);\n    this.internalDatastore.addToStore(newObject);\n\n    return newObject;\n  }\n}\n","export interface JsonApiError {\n  id?: string;\n  links?: Array<any>;\n  status?: string;\n  code?: string;\n  title?: string;\n  detail?: string;\n  source?: {\n    pointer?: string;\n    parameter?: string\n  };\n  meta?: any;\n}\n\nexport class ErrorResponse {\n  errors?: JsonApiError[] = [];\n\n  constructor(errors ?: JsonApiError[]) {\n    if (errors) {\n      this.errors = errors;\n    }\n  }\n}\n","export class JsonApiQueryData<T> {\n  constructor(protected jsonApiModels: Array<T>, protected metaData?: any) {\n  }\n\n  public getModels(): T[] {\n    return this.jsonApiModels;\n  }\n\n  public getMeta(): any {\n    return this.metaData;\n  }\n}\n","export interface Overrides {\n  getDirtyAttributes?: (attributedMetadata: any, model ?: any) => object;\n  toQueryString?: (params: any) => string;\n}\n","export interface JsonModelConverterConfig {\n  nullValue?: boolean;\n  hasMany?: boolean;\n}\n","import { Overrides } from './overrides.interface';\n\nexport interface DatastoreConfig {\n  apiVersion?: string;\n  baseUrl?: string;\n  models?: object;\n  overrides?: Overrides;\n}\n","import { MetaModelType } from '../models/json-api-meta.model';\n\nexport interface ModelConfig<T = any> {\n  type: string;\n  apiVersion?: string;\n  baseUrl?: string;\n  modelEndpointUrl?: string;\n  meta?: MetaModelType<T>;\n}\n","import { PropertyConverter } from './property-converter.interface';\n\nexport interface AttributeDecoratorOptions {\n  serializedName?: string;\n  converter?: PropertyConverter;\n}\n","export interface PropertyConverter {\n  mask(value: any): any;\n\n  unmask(value: any): any;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport find from 'lodash-es/find';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, of, throwError } from 'rxjs';\nimport { JsonApiModel } from '../models/json-api.model';\nimport { ErrorResponse } from '../models/error-response.model';\nimport { JsonApiQueryData } from '../models/json-api-query-data';\nimport * as qs from 'qs';\nimport { DatastoreConfig } from '../interfaces/datastore-config.interface';\nimport { ModelConfig } from '../interfaces/model-config.interface';\nimport { AttributeMetadata } from '../constants/symbols';\nimport 'reflect-metadata';\n\nexport type ModelType<T extends JsonApiModel> = new(datastore: JsonApiDatastore, data: any) => T;\n\n/**\n * HACK/FIXME:\n * Type 'symbol' cannot be used as an index type.\n * TypeScript 2.9.x\n * See https://github.com/Microsoft/TypeScript/issues/24587.\n */\n// tslint:disable-next-line:variable-name\nconst AttributeMetadataIndex: string = AttributeMetadata as any;\n\n@Injectable()\nexport class JsonApiDatastore {\n\n  protected config: DatastoreConfig;\n  private globalHeaders: HttpHeaders;\n  private globalRequestOptions: object = {};\n  private internalStore: { [type: string]: { [id: string]: JsonApiModel } } = {};\n  private toQueryString: (params: any) => string = this.datastoreConfig.overrides\n  && this.datastoreConfig.overrides.toQueryString ?\n    this.datastoreConfig.overrides.toQueryString : this._toQueryString;\n\n  constructor(protected http: HttpClient) {\n  }\n\n  set headers(headers: HttpHeaders) {\n    this.globalHeaders = headers;\n  }\n\n  set requestOptions(requestOptions: object) {\n    this.globalRequestOptions = requestOptions;\n  }\n\n  public get datastoreConfig(): DatastoreConfig {\n    const configFromDecorator: DatastoreConfig = Reflect.getMetadata('JsonApiDatastoreConfig', this.constructor);\n    return Object.assign(configFromDecorator, this.config);\n  }\n\n  private get getDirtyAttributes() {\n    if (this.datastoreConfig.overrides\n      && this.datastoreConfig.overrides.getDirtyAttributes) {\n      return this.datastoreConfig.overrides.getDirtyAttributes;\n    }\n    return JsonApiDatastore.getDirtyAttributes;\n  }\n\n  private static getDirtyAttributes(attributesMetadata: any): { string: any } {\n    const dirtyData: any = {};\n\n    for (const propertyName in attributesMetadata) {\n      if (attributesMetadata.hasOwnProperty(propertyName)) {\n        const metadata: any = attributesMetadata[propertyName];\n\n        if (metadata.hasDirtyAttributes) {\n          const attributeName = metadata.serializedName != null ? metadata.serializedName : propertyName;\n          dirtyData[attributeName] = metadata.serialisationValue ? metadata.serialisationValue : metadata.newValue;\n        }\n      }\n    }\n    return dirtyData;\n  }\n\n  /**\n   * @deprecated use findAll method to take all models\n   */\n  query<T extends JsonApiModel>(\n    modelType: ModelType<T>,\n    params?: any,\n    headers?: HttpHeaders,\n    customUrl?: string\n  ): Observable<T[]> {\n    const requestHeaders: HttpHeaders = this.buildHttpHeaders(headers);\n    const url: string = this.buildUrl(modelType, params, undefined, customUrl);\n    return this.http.get(url, {headers: requestHeaders})\n      .pipe(\n        map((res: any) => this.extractQueryData(res, modelType)),\n        catchError((res: any) => this.handleError(res))\n      );\n  }\n\n  public findAll<T extends JsonApiModel>(\n    modelType: ModelType<T>,\n    params?: any,\n    headers?: HttpHeaders,\n    customUrl?: string\n  ): Observable<JsonApiQueryData<T>> {\n    const url: string = this.buildUrl(modelType, params, undefined, customUrl);\n    const requestOptions: object = this.buildRequestOptions({headers, observe: 'response'});\n\n    return this.http.get(url, requestOptions)\n      .pipe(\n        map((res: HttpResponse<object>) => this.extractQueryData(res, modelType, true)),\n        catchError((res: any) => this.handleError(res))\n      );\n  }\n\n  public findRecord<T extends JsonApiModel>(\n    modelType: ModelType<T>,\n    id: string,\n    params?: any,\n    headers?: HttpHeaders,\n    customUrl?: string\n  ): Observable<T> {\n    const requestOptions: object = this.buildRequestOptions({headers, observe: 'response'});\n    const url: string = this.buildUrl(modelType, params, id, customUrl);\n\n    return this.http.get(url, requestOptions)\n      .pipe(\n        map((res: HttpResponse<object>) => this.extractRecordData(res, modelType)),\n        catchError((res: any) => this.handleError(res))\n      );\n  }\n\n  public createRecord<T extends JsonApiModel>(modelType: ModelType<T>, data?: any): T {\n    return new modelType(this, {attributes: data});\n  }\n\n  public saveRecord<T extends JsonApiModel>(\n    attributesMetadata: any,\n    model: T,\n    params?: any,\n    headers?: HttpHeaders,\n    customUrl?: string\n  ): Observable<T> {\n    const modelType = model.constructor as ModelType<T>;\n    const modelConfig: ModelConfig = model.modelConfig;\n    const typeName: string = modelConfig.type;\n    const relationships: any = this.getRelationships(model);\n    const url: string = this.buildUrl(modelType, params, model.id, customUrl);\n\n    let httpCall: Observable<HttpResponse<object>>;\n    const body: any = {\n      data: {\n        relationships,\n        type: typeName,\n        id: model.id,\n        attributes: this.getDirtyAttributes(attributesMetadata, model)\n      }\n    };\n\n    const requestOptions: object = this.buildRequestOptions({headers, observe: 'response'});\n\n    if (model.id) {\n      httpCall = this.http.patch<object>(url, body, requestOptions) as Observable<HttpResponse<object>>;\n    } else {\n      httpCall = this.http.post<object>(url, body, requestOptions) as Observable<HttpResponse<object>>;\n    }\n\n    return httpCall\n      .pipe(\n        map((res) => [200, 201].indexOf(res.status) !== -1 ? this.extractRecordData(res, modelType, model) : model),\n        catchError((res) => {\n          if (res == null) {\n            return of(model);\n          }\n          return this.handleError(res);\n        }),\n        map((res) => this.updateRelationships(res, relationships))\n      );\n  }\n\n  public deleteRecord<T extends JsonApiModel>(\n    modelType: ModelType<T>,\n    id: string,\n    headers?: HttpHeaders,\n    customUrl?: string\n  ): Observable<Response> {\n    const requestOptions: object = this.buildRequestOptions({headers});\n    const url: string = this.buildUrl(modelType, null, id, customUrl);\n\n    return this.http.delete(url, requestOptions)\n      .pipe(\n        catchError((res: HttpErrorResponse) => this.handleError(res))\n      );\n  }\n\n  public peekRecord<T extends JsonApiModel>(modelType: ModelType<T>, id: string): T | null {\n    const type: string = Reflect.getMetadata('JsonApiModelConfig', modelType).type;\n    return this.internalStore[type] ? this.internalStore[type][id] as T : null;\n  }\n\n  public peekAll<T extends JsonApiModel>(modelType: ModelType<T>): Array<T> {\n    const type = Reflect.getMetadata('JsonApiModelConfig', modelType).type;\n    const typeStore = this.internalStore[type];\n    return typeStore ? Object.keys(typeStore).map((key) => typeStore[key] as T) : [];\n  }\n\n  public deserializeModel<T extends JsonApiModel>(modelType: ModelType<T>, data: any) {\n    data.attributes = this.transformSerializedNamesToPropertyNames(modelType, data.attributes);\n    return new modelType(this, data);\n  }\n\n  public addToStore(modelOrModels: JsonApiModel | JsonApiModel[]): void {\n    const models = Array.isArray(modelOrModels) ? modelOrModels : [modelOrModels];\n    const type: string = models[0].modelConfig.type;\n    let typeStore = this.internalStore[type];\n\n    if (!typeStore) {\n      typeStore = this.internalStore[type] = {};\n    }\n\n    for (const model of models) {\n      typeStore[model.id] = model;\n    }\n  }\n\n  public transformSerializedNamesToPropertyNames<T extends JsonApiModel>(modelType: ModelType<T>, attributes: any) {\n    const serializedNameToPropertyName = this.getModelPropertyNames(modelType.prototype);\n    const properties: any = {};\n\n    Object.keys(serializedNameToPropertyName).forEach((serializedName) => {\n      if (attributes && attributes[serializedName] !== null && attributes[serializedName] !== undefined) {\n        properties[serializedNameToPropertyName[serializedName]] = attributes[serializedName];\n      }\n    });\n\n    return properties;\n  }\n\n  protected buildUrl<T extends JsonApiModel>(\n    modelType: ModelType<T>,\n    params?: any,\n    id?: string,\n    customUrl?: string\n  ): string {\n    // TODO: use HttpParams instead of appending a string to the url\n    const queryParams: string = this.toQueryString(params);\n\n    if (customUrl) {\n      return queryParams ? `${customUrl}?${queryParams}` : customUrl;\n    }\n\n    const modelConfig: ModelConfig = Reflect.getMetadata('JsonApiModelConfig', modelType);\n\n    const baseUrl = modelConfig.baseUrl || this.datastoreConfig.baseUrl;\n    const apiVersion = modelConfig.apiVersion || this.datastoreConfig.apiVersion;\n    const modelEndpointUrl: string = modelConfig.modelEndpointUrl || modelConfig.type;\n\n    const url: string = [baseUrl, apiVersion, modelEndpointUrl, id].filter((x) => x).join('/');\n\n    return queryParams ? `${url}?${queryParams}` : url;\n  }\n\n  protected getRelationships(data: any): any {\n    let relationships: any;\n\n    const belongsToMetadata: any[] = Reflect.getMetadata('BelongsTo', data) || [];\n    const hasManyMetadata: any[] = Reflect.getMetadata('HasMany', data) || [];\n\n    for (const key in data) {\n      if (data.hasOwnProperty(key)) {\n        if (data[key] instanceof JsonApiModel) {\n          relationships = relationships || {};\n\n          if (data[key].id) {\n            const entity = belongsToMetadata.find((it: any) => it.propertyName === key);\n            const relationshipKey = entity.relationship;\n            relationships[relationshipKey] = {\n              data: this.buildSingleRelationshipData(data[key])\n            };\n          }\n        } else if (data[key] instanceof Array) {\n          const entity = hasManyMetadata.find((it: any) => it.propertyName === key);\n          if (entity && this.isValidToManyRelation(data[key])) {\n            relationships = relationships || {};\n\n            const relationshipKey = entity.relationship;\n            const relationshipData = data[key]\n              .filter((model: JsonApiModel) => model.id)\n              .map((model: JsonApiModel) => this.buildSingleRelationshipData(model));\n\n            relationships[relationshipKey] = {\n              data: relationshipData\n            };\n          }\n        }\n      }\n    }\n\n    return relationships;\n  }\n\n  protected isValidToManyRelation(objects: Array<any>): boolean {\n    if (!objects.length) {\n      return true;\n    }\n    const isJsonApiModel = objects.every((item) => item instanceof JsonApiModel);\n    if (!isJsonApiModel) {\n      return false;\n    }\n    const types = objects.map((item: JsonApiModel) => item.modelConfig.modelEndpointUrl || item.modelConfig.type);\n    return types\n      .filter((type: string, index: number, self: string[]) => self.indexOf(type) === index)\n      .length === 1;\n  }\n\n  protected buildSingleRelationshipData(model: JsonApiModel): any {\n    const relationshipType: string = model.modelConfig.type;\n    const relationShipData: { type: string, id?: string, attributes?: any } = {type: relationshipType};\n\n    if (model.id) {\n      relationShipData.id = model.id;\n    } else {\n      const attributesMetadata: any = Reflect.getMetadata('Attribute', model);\n      relationShipData.attributes = this.getDirtyAttributes(attributesMetadata, model);\n    }\n\n    return relationShipData;\n  }\n\n  protected extractQueryData<T extends JsonApiModel>(\n    response: HttpResponse<object>,\n    modelType: ModelType<T>,\n    withMeta = false\n  ): Array<T> | JsonApiQueryData<T> {\n    const body: any = response.body;\n    const models: T[] = [];\n\n    body.data.forEach((data: any) => {\n      const model: T = this.deserializeModel(modelType, data);\n      this.addToStore(model);\n\n      if (body.included) {\n        model.syncRelationships(data, body.included.concat(data));\n        this.addToStore(model);\n      }\n\n      models.push(model);\n    });\n\n    if (withMeta && withMeta === true) {\n      return new JsonApiQueryData(models, this.parseMeta(body, modelType));\n    }\n\n    return models;\n  }\n\n  protected extractRecordData<T extends JsonApiModel>(\n    res: HttpResponse<object>,\n    modelType: ModelType<T>,\n    model?: T\n  ): T {\n    const body: any = res.body;\n    // Error in Angular < 5.2.4 (see https://github.com/angular/angular/issues/20744)\n    // null is converted to 'null', so this is temporary needed to make testcase possible\n    // (and to avoid a decrease of the coverage)\n    if (!body || body === 'null') {\n      throw new Error('no body in response');\n    }\n\n    if (!body.data) {\n      if (res.status === 201 || !model) {\n        throw new Error('expected data in response');\n      }\n      return model;\n    }\n\n    if (model) {\n      model.modelInitialization = true;\n      model.id = body.data.id;\n      Object.assign(model, body.data.attributes);\n      model.modelInitialization = false;\n    }\n\n    const deserializedModel = model || this.deserializeModel(modelType, body.data);\n    this.addToStore(deserializedModel);\n    if (body.included) {\n      deserializedModel.syncRelationships(body.data, body.included);\n      this.addToStore(deserializedModel);\n    }\n\n    return deserializedModel;\n  }\n\n  protected handleError(error: any): Observable<any> {\n    if (\n      error instanceof HttpErrorResponse &&\n      error.error instanceof Object &&\n      error.error.errors &&\n      error.error.errors instanceof Array\n    ) {\n      const errors: ErrorResponse = new ErrorResponse(error.error.errors);\n      return throwError(errors);\n    }\n\n    return throwError(error);\n  }\n\n  protected parseMeta(body: any, modelType: ModelType<JsonApiModel>): any {\n    const metaModel: any = Reflect.getMetadata('JsonApiModelConfig', modelType).meta;\n    return new metaModel(body);\n  }\n\n  /**\n   * @deprecated use buildHttpHeaders method to build request headers\n   */\n  protected getOptions(customHeaders?: HttpHeaders): any {\n    return {\n      headers: this.buildHttpHeaders(customHeaders),\n    };\n  }\n\n  protected buildHttpHeaders(customHeaders?: HttpHeaders): HttpHeaders {\n    let requestHeaders: HttpHeaders = new HttpHeaders({\n      Accept: 'application/vnd.api+json',\n      'Content-Type': 'application/vnd.api+json'\n    });\n\n    if (this.globalHeaders) {\n      this.globalHeaders.keys().forEach((key) => {\n        if (this.globalHeaders.has(key)) {\n          requestHeaders = requestHeaders.set(key, this.globalHeaders.get(key));\n        }\n      });\n    }\n\n    if (customHeaders) {\n      customHeaders.keys().forEach((key) => {\n        if (customHeaders.has(key)) {\n          requestHeaders = requestHeaders.set(key, customHeaders.get(key));\n        }\n      });\n    }\n\n    return requestHeaders;\n  }\n\n  protected resetMetadataAttributes<T extends JsonApiModel>(res: T, attributesMetadata: any, modelType: ModelType<T>) {\n    for (const propertyName in attributesMetadata) {\n      if (attributesMetadata.hasOwnProperty(propertyName)) {\n        const metadata: any = attributesMetadata[propertyName];\n\n        if (metadata.hasDirtyAttributes) {\n          metadata.hasDirtyAttributes = false;\n        }\n      }\n    }\n\n    // @ts-ignore\n    res[AttributeMetadataIndex] = attributesMetadata;\n    return res;\n  }\n\n  protected updateRelationships<T extends JsonApiModel>(model: T, relationships: any): T {\n    const modelsTypes: any = Reflect.getMetadata('JsonApiDatastoreConfig', this.constructor).models;\n\n    for (const relationship in relationships) {\n      if (relationships.hasOwnProperty(relationship) && model.hasOwnProperty(relationship)) {\n        const relationshipModel: JsonApiModel = model[relationship];\n        const hasMany: any[] = Reflect.getMetadata('HasMany', relationshipModel);\n        const propertyHasMany: any = find(hasMany, (property) => {\n          return modelsTypes[property.relationship] === model.constructor;\n        });\n\n        if (propertyHasMany) {\n          relationshipModel[propertyHasMany.propertyName] = relationshipModel[propertyHasMany.propertyName] || [];\n\n          const indexOfModel = relationshipModel[propertyHasMany.propertyName].indexOf(model);\n\n          if (indexOfModel === -1) {\n            relationshipModel[propertyHasMany.propertyName].push(model);\n          } else {\n            relationshipModel[propertyHasMany.propertyName][indexOfModel] = model;\n          }\n        }\n      }\n    }\n\n    return model;\n  }\n\n  protected getModelPropertyNames(model: JsonApiModel) {\n    return Reflect.getMetadata('AttributeMapping', model) || [];\n  }\n\n  private buildRequestOptions(customOptions: any = {}): object {\n    const httpHeaders: HttpHeaders = this.buildHttpHeaders(customOptions.headers);\n\n    const requestOptions: object = Object.assign(customOptions, {\n      headers: httpHeaders\n    });\n\n    return Object.assign(this.globalRequestOptions, requestOptions);\n  }\n\n  private _toQueryString(params: any): string {\n    return qs.stringify(params, {arrayFormat: 'brackets'});\n  }\n}\n","import { JsonApiDatastore } from './services/json-api-datastore.service';\n\nexport * from './services/json-api-datastore.service';\n\nexport const PROVIDERS: any[] = [\n  JsonApiDatastore\n];\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PROVIDERS } from './providers';\n\n@NgModule({\n  providers: [PROVIDERS],\n  exports: [HttpClientModule]\n})\nexport class JsonApiModule {\n}\n"],"names":["tslib_1.__values","parseISO","_.isEqual","_.cloneDeep","_.forEach","_.extend","AttributeMetadataIndex","map","catchError","of","HttpErrorResponse","throwError","HttpHeaders","qs.stringify","Injectable","HttpClient","NgModule","HttpClientModule"],"mappings":"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"}